The following progression of tests are transition from byte to char
tokenizing:

All of these are 2 test threads on:

pica 2x Intel Core 2 Duo E8400  @ 3.00GHz

Initial tests are on:

jruby 1.5.3 (ruby 1.8.7 patchlevel 249) (2010-09-28 304dfc4) (Java HotSpot(TM) Server VM 1.6.0_21) [i386-java]

Final tests:

jruby 1.5.3 (ruby 1.8.7 patchlevel 249) (2010-09-28 304dfc4) (Java HotSpot(TM) 64-Bit Server VM 1.6.0_21) [amd64-java]

ByteBuffer:

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 44,000 10.259s 8.800M 200.00/r  4,289r/s (   N/A) 465.6µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 44,000 10.137s 8.800M 200.00/r  4,340r/s (+1.20%) 460.2µs/r (-1.17%)
-------------------------------------------------------------------------------
SimHashGen 44,000 10.169s 8.800M 200.00/r  4,327r/s (-0.31%) 461.5µs/r (+0.30%)
===============================================================================
SimHashGen 132.0k 30.565s 26.40M 200.00/r  4,319r/s (   N/A) 462.4µs/r (   N/A)

CharBuffer (murmhash bytes):

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 46,000  9.824s 9.200M 200.00/r  4,682r/s (   N/A) 426.5µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 46,000  9.938s 9.200M 200.00/r  4,629r/s (-1.15%) 431.3µs/r (+1.13%)
-------------------------------------------------------------------------------
SimHashGen 46,000  9.932s 9.200M 200.00/r  4,632r/s (+0.07%) 431.0µs/r (-0.06%)
===============================================================================
SimHashGen 138.0k 29.694s 27.60M 200.00/r  4,648r/s (   N/A) 429.6µs/r (   N/A)

CharBuffer (murmhash chars):

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 52,000 10.083s 9.464M 182.00/r  5,157r/s (   N/A) 387.2µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 52,000 10.227s 9.464M 182.00/r  5,084r/s (-1.41%) 392.7µs/r (+1.44%)
-------------------------------------------------------------------------------
SimHashGen 52,000 10.160s 9.464M 182.00/r  5,118r/s (+0.67%) 390.1µs/r (-0.68%)
===============================================================================
SimHashGen 156.0k 30.470s 28.39M 182.00/r  5,120r/s (   N/A) 390.0µs/r (   N/A)

String (murmhash chars): [x32]:

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 52,000 10.070s 9.464M 182.00/r  5,164r/s (   N/A) 386.7µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 52,000 10.010s 9.464M 182.00/r  5,195r/s (+0.59%) 384.4µs/r (-0.57%)
-------------------------------------------------------------------------------
SimHashGen 52,000 10.030s 9.464M 182.00/r  5,185r/s (-0.19%) 385.1µs/r (+0.16%)
===============================================================================
SimHashGen 156.0k 30.109s 28.39M 182.00/r  5,181r/s (   N/A) 385.4µs/r (   N/A)

String (murmhash chars) [x64]:

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 63,000 10.216s 11.47M 182.00/r  6,167r/s (   N/A) 324.2µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 63,000  9.999s 11.47M 182.00/r  6,301r/s (+2.18%) 317.3µs/r (-2.14%)
-------------------------------------------------------------------------------
SimHashGen 63,000 10.016s 11.47M 182.00/r  6,290r/s (-0.17%) 317.8µs/r (+0.14%)
===============================================================================
SimHashGen 189.0k 30.231s 34.40M 182.00/r  6,252r/s (   N/A) 319.8µs/r (   N/A)

String, isHTMLWS tokenize (murmhash chars) [x64]:

(Note: hand conditional instead of isHTMLWS not any faster.)

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 60,000  9.854s 10.92M 182.00/r  6,089r/s (   N/A) 328.4µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 60,000 10.032s 10.92M 182.00/r  5,981r/s (-1.77%) 334.2µs/r (+1.79%)
-------------------------------------------------------------------------------
SimHashGen 60,000  9.738s 10.92M 182.00/r  6,161r/s (+3.02%) 324.4µs/r (-2.93%)
===============================================================================
SimHashGen 180.0k 29.624s 32.76M 182.00/r  6,077r/s (   N/A) 329.0µs/r (   N/A)

As above, with TokenCounter hash size reduced to 1024.

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 62,000 10.013s 11.28M 182.00/r  6,192r/s (   N/A) 322.9µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 62,000  9.989s 11.28M 182.00/r  6,207r/s (+0.24%) 322.1µs/r (-0.25%)
-------------------------------------------------------------------------------
SimHashGen 62,000 10.108s 11.28M 182.00/r  6,134r/s (-1.18%) 325.8µs/r (+1.16%)
===============================================================================
SimHashGen 186.0k 30.110s 33.85M 182.00/r  6,178r/s (   N/A) 323.6µs/r (   N/A)

After:
e18cf8d simhash: Tokenizer drops quotes and dashes
9dd0995 simhash: support comments in stopword files
d0083f3 simhash: Tokenizer drop 1-2 character tokens (faster, less noise)

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 62,000  9.883s 11.28M 182.00/r  6,274r/s (   N/A) 318.7µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 62,000  9.714s 11.28M 182.00/r  6,383r/s (+1.74%) 313.2µs/r (-1.71%)
-------------------------------------------------------------------------------
SimHashGen 62,000  9.633s 11.28M 182.00/r  6,436r/s (+0.83%) 310.6µs/r (-0.86%)
===============================================================================
SimHashGen 186.0k 29.230s 33.85M 182.00/r  6,364r/s (   N/A) 314.2µs/r (   N/A)

After:
f28d3e0 simhash: Further optimize/simplify tokenizer loop

Comparison runs (3 iterations):
Test       Count  Time    R Sum  ~R Value Throughput(Change) ~Latency  (Change)
===============================================================================
SimHashGen 65,000 10.121s 11.83M 182.00/r  6,422r/s (   N/A) 311.3µs/r (   N/A)
-------------------------------------------------------------------------------
SimHashGen 65,000 10.105s 11.83M 182.00/r  6,433r/s (+0.16%) 310.8µs/r (-0.16%)
-------------------------------------------------------------------------------
SimHashGen 65,000 10.159s 11.83M 182.00/r  6,398r/s (-0.53%) 312.4µs/r (+0.51%)
===============================================================================
SimHashGen 195.0k 30.384s 35.49M 182.00/r  6,418r/s (   N/A) 311.5µs/r (   N/A)
