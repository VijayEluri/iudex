=== 1.7.0 (2015-5-3)
* Upgrade to iudex-* ~> 1.7 dependencies
* Broaden to jdbc-postgres ~> 9.3 (tested with 9.3.1103 and 9.4.1200).
  build java against 9.3.1103 (jdbc 4.1, java 1.7+ required)

=== 1.5.1 (2015-1-25)
* Broaden to sequel ~> 4.8 (tested with 4.18.0).

=== 1.5.0 (2014-3-27)
* Upgrade to jdbc-postgres ~> 9.3.1100 (also tested 9.3.1101)
* Upgrade to sequel ~> 4.8.0
* Expand to >= 1.4.0, < 1.7 iudex-core dependency
* Add WorkPoller.isolation_level accessor
* Add WorkPoller.max_retries accessor
* Auto-compute WorkPoller max_urls from set domain_union
* Add exponential backoff delay option to ContentReader.handleError
  retries, setter in WorkPoller
* Add explicit LOCK mode option to URLs table in ContentReader, setter
  in WorkPoller
* Add null check to WorkPoller select_with_retry call (may occur when
  retries exhausted).

=== 1.4.0 (2013-10-29)
* Add experimental WorkPoller.do_reserve support, which utilizes
  PostgreSQL 9.1+ writable Common Table Expressions (CTEs) to
  efficiently(?) set a reserved column and instance (identifier) on
  poll that guards against polling by another or the same iudex-worker
  process. This enables multiple workers to cover the same urls/orders
  as well as concurrent polling. Previously only an instance unique,
  uhash_slice single-tenant partitioning scheme was supported for
  multi-worker distribution.
* Add experimental support for concurrent (no discard) WorkPoller (in
  collaboration with iudex-core 1.4.0 VisitManager), enabled when set
  do_reserve = true, do_discard = false.
  * When enabled, polled max_urls is adjusted by current order_count
    for subsequent polls.
  * New max_reserved_time will force discard of possibly long reserved
    tenure based on time since the queue was last empty.
  * New max_discard_ratio will also force a discard if
    order_count/max_urls exceeds this ratio.
* Add iudex-da-unreserve utility for cleaning reservations left due to
  failure, based on age.
* Add DAKeys INSTANCE (String identifier) and RESERVED (date)
* Add migrations for instance and reserved columns; removal of
  reserved from index_next_visit (profile)
* Upgrade to dbutils ~> 1.5.0, rjack-jdbc-postgres ~> 9.2.1002,
  sequel ~> 3.46 (but not upcoming 4.x)
* Upgrade to iudex-* ~> 1.4.0 dependencies
* Upgrade to minitest ~> 4.7.4 (dev)

=== 1.3.3 (2012-11-8)
* FactoryHelper.create_update_filter now prefers an options Hash
  exposing greater control over what is updated and how. In
  particular, :on_referer can be independently set.
* Add (Base)Transformer, ContentUpdater, UpdateFilter support for a
  distinct REFERER filter chain. Now content, referer, and references
  updates are all optional.
* BaseTransformer.merge now augments the updated map with the current
  (database) contents instead of creating a temporary map on which
  UpdateFilter chain mutations would be discarded.  This change makes
  it consistent with either new or updated content.
* Add new options Hash syntax and :type support to
  WorkPoller.domain_union
* Fix WorkPoller uhash_slice range calculation for ruby 1.8
* Intern :type values on read in ContentMapper
* Upgrade/narrow to iudex-core ~> 1.3.0 (incl. gravitext-util ~> 1.7.0)
* Upgrade to logback ~> 1.5 (dev)
* Add WorkPoller logging and consolidate log from
  GenericWorkPollStrategy.

=== 1.3.2 (2012-10-25)
* Add migration to make index_next_visit partial over non-null
  next_visit_after rows. (Index rebuild may take a while.)
* Fix 1.3.0 regression: TimestampMigrator expects sort ordered
  get_migration_files (apparent with above addition).
* Add (from 1.3.1) DAKeys to default imports

=== 1.3.1 (2012-10-13)
* Fix 1.3.0 regression, causing age adjusted priority to be written
  back to the database as the normal priority value. Now
  PRIORITY_ADJUSTED is set and BaseTransformer accounts for this by
  prefering the DB current, unadjusted value.

=== 1.3.0 (2012-10-4)
* Expand to iudex-core [1.2.1,1.4)
* Rewrite of WorkPoller:
  * Now in Ruby, for ease of customization.
  * max_priority_urls now defaults off for common cases
  * do_domain_group now selectable (default off, commonly unneeded)
  * domain_depth_coef (deprecated host_depth_divisor reciprocal) now
    defaults nil (domain window partitioning off)
  * Added new priority aging feature (priority increases with current
    age of next_visit_after), on by default.
  * Added new domain_union feature, which allows domain filtering,
    independent size control, and faster polling, as compared with
    general domain depth prioritization, when a limited set of domains
    is used.
  * Added new uhash_slice feature, which allows selecting a specific
    segment of the overall uhash space, and scaling to multiple worker
    instances (and IPs) with a shared database. This form of sharding
    offers best pseudo-random balancing of URLs at the expense of
    single-domain-instance politeness control.
* Replace use of Activerecord (for migrations and tests) with Sequel:
  * Smaller deps, faster load times (particularly under jruby)
  * Better Primary Key, composite VisitURL, type field support (models
    Url).
  * Provide Activerecord -> Sequel migration support (from a complete
    iudex-da 1.2.1 db); consolidate prior migrations to a single base
    and profile migrations.
* Add new (Sequel) migration to set "C" locale collate (aka ASCII sort
  order) for uhash (required for uhash_slice, see above.) iudex-da now
  depends on PostgreSQL 9.1 for COLLATE support.

=== 1.2.1 (2012-9-15)
* Upgrade to logback ~> 1.2 (dev)

==== 1.2.b.4 (2012-8-1)
* Add ReadFilter (and FactoryHelper.create_read_filter) to get current
  database state of orders that are synthesized or handled in session,
  instead of being polled.
* Allow migration profile extensions to include absolute/external
  directory paths.

==== 1.2.b.3 (2012-7-22)
* Move retry loop from UpdateFilter to ContentUpdater, supporting the
  same retry logic via the importer as well. Importing on a live
  system may similarly produce transaction conflicts.

==== 1.2.b.2 (2012-6-23)
* Add configurable transaction isolation level to ContentWriter,
  ContentUpdater, and UpdateFilter. Change default level from
  READ_COMMITED to REPEATABLE_READ where updater SELECT FOR UPDATE
  locking works as intended, by delaying or rolling back overlapping
  transactions as with PostgreSQL "could not serialize access due to
  concurrent update" or "deadlock detected."
* Add retry loop to UpdateFilter with configurable retryCount (default
  3) and logging. Warning: It is now possible for UpdateFilter
  sub-chains to be executed repeatedly, though not at least in the most
  common rollback/retry case.

==== 1.2.b.1 (2012-5-31)
* Use explicit UPDATE statements. This is ~10x faster than cursor
  updateRow, at least with latest updates.

==== 1.2.b.0 (2012-3-4)
* Upgrade to activerecord ~> 3.1.3, adapter ~> 1.2.2, pg ~> 9.1.901,
  dbutils ~> 1.4.0.
* Fix order dependency issue in junit WorkPollerTest.
* Latest postgresql jar is now available in maven central, so the
  java.net repo is no longer needed.
* Upgrade to tarpit ~> 2.0, bundler Gemfile, gemspec (dev)

=== 1.1.1 (2011-11-17)
* Fix manifest to include domain migration.

=== 1.1.0 (2011-11-13)
* Update to iudex-core ~> 1.1.0
* Update to activerecord ~> 3.0.10, pg ~> 9.0.801, adapter ~> 1.1.3
* Expand commons-pool pom dep to [1.5.4, 1.5.6]
* Migrate host field to domain (registration level), mapper/writer
  domain support, :domain in WorkPoller, drop :host key.
* Add migration profile support, move simhash index to simhash
  profile, add index_next_visit migration profile
* Update to minitest ~> 2.3

=== 1.0.0 (2011-04-04)
* Initial release.
